<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--
		NOTE :
			Refer to sudoor-design/System Management Sketch for detailed Info.
			
			Parent POM ONLY maintain :
				Project Info
				Env Info & Management(DB, Server)
					This normally used to manage existing Env via cargo which can be used in whole SDLC flow.
					Spring boot also manage Env, but it only provide basic manage which can only be used in development.
				Profiles as utility
				Global SDLC Build Cfg

			Regarding to Build Info need to be maintained in child POM.
	-->

	<!-- The Basics -->
	<parent>
		<groupId>io.spring.platform</groupId>
		<artifactId>platform-bom</artifactId>
		<version>1.0.0.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>net.gplatform</groupId>
	<artifactId>sudoor-server-parent</artifactId>
	<version>1.0.5-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<org.testng.version>6.8.8</org.testng.version>
		<com.h2database.version>1.4.177</com.h2database.version>
		<org.postgresql.version>9.2-1003-jdbc4</org.postgresql.version>
		<org.apache.tomcat.version>7.0.54</org.apache.tomcat.version>

		<!-- used by license-maven-plugin -->
		<license.licenseName>gpl_v2</license.licenseName>


		<!-- properties -->
		<runtime.appsvr.configuration.hostname>localhost</runtime.appsvr.configuration.hostname>
		<runtime.appsvr.configuration.protocol>http</runtime.appsvr.configuration.protocol>
		<runtime.appsvr.configuration.jvmargs.common>
			-Xms512m
			-Xmx4g
			-Dfile.encoding=UTF-8
		</runtime.appsvr.configuration.jvmargs.common>
		<runtime.appsvr.configuration.jvmargs.debug>
			-Xdebug
			-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4001
			-Xnoagent
			-Djava.compiler=NONE
		</runtime.appsvr.configuration.jvmargs.debug>
		<runtime.appsvr.configuration.jvmargs>
			${runtime.appsvr.configuration.jvmargs.common}
		</runtime.appsvr.configuration.jvmargs>
		<runtime.appsvr.configuration.datasource.datasource.oracle>
			cargo.datasource.driver=${runtime.db.driver}|
			cargo.datasource.url=${runtime.db.url}|
			cargo.datasource.jndi=${runtime.db.jndi}|
			cargo.datasource.username=${runtime.db.username}|
			cargo.datasource.password=${runtime.db.password}
		</runtime.appsvr.configuration.datasource.datasource.oracle>

		<runtime.appsvr.configuration.servlet.port>8080</runtime.appsvr.configuration.servlet.port>
		<runtime.appsvr.configuration.port.offset>0</runtime.appsvr.configuration.port.offset>
		<runtime.appsvr.configuration.contextPath>${project.artifactId}</runtime.appsvr.configuration.contextPath>
		<runtime.appsvr.configuration.manager.username>username</runtime.appsvr.configuration.manager.username>
		<runtime.appsvr.configuration.manager.password>password</runtime.appsvr.configuration.manager.password>

		<runtime.db.driver>org.h2.Driver</runtime.db.driver>
		<runtime.db.url>jdbc:h2:~/db/gplatform</runtime.db.url>
		<runtime.db.jndi>jdbc/GPlatformDataSource</runtime.db.jndi>

		<runtime.key.alias>gplatformkey</runtime.key.alias>
		<runtime.key.algorithm>RSA</runtime.key.algorithm>
		<!-- tomcat can not support different key and store password -->
		<runtime.key.password>Shark1011</runtime.key.password>
		<runtime.key.size>1024</runtime.key.size>
		<runtime.key.validity>100</runtime.key.validity>
		<runtime.key.dname>cn=www.gplatform.net, ou=None, L=Seattle, ST=Shanghai, o=gplatform, c=CN</runtime.key.dname>
		<runtime.key.store>${project.build.directory}/keys/gplatformkeystore</runtime.key.store>
		<runtime.key.store.type>JKS</runtime.key.store.type>
		<runtime.key.store.password>Shark1011</runtime.key.store.password>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${org.testng.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- this is the embed DB -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${com.h2database.version}</version>
		</dependency>
		<!-- this is the external DB, jdbc for postgreSQL -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${org.postgresql.version}</version>
		</dependency>
		<!-- this is the server -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina</artifactId>
			<version>${org.apache.tomcat.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-coyote</artifactId>
			<version>${org.apache.tomcat.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>


	<!-- Build Settings -->
	<!-- These plugins cannot customize build process, only used as tool scripts -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<configuration>
						<container>
							<type>${runtime.appsvr.container.type}</type>
							<containerId>${runtime.appsvr.container.containerId}</containerId>
							<timeout>1800000</timeout>
							<home>${runtime.appsvr.container.home}</home>
							<zipUrlInstaller>
								<url>${runtime.appsvr.container.zipUrlInstaller.url}
								</url>
							</zipUrlInstaller>
						</container>
						<configuration>
							<type>${runtime.appsvr.configuration.type}</type>
							<home>${runtime.appsvr.configuration.home}</home>
							<properties>
								<cargo.port.offset>${runtime.appsvr.configuration.port.offset}</cargo.port.offset>
								<cargo.jvmargs>${runtime.appsvr.configuration.jvmargs}</cargo.jvmargs>
								<cargo.hostname>${runtime.appsvr.configuration.hostname}</cargo.hostname>
								<cargo.protocol>${runtime.appsvr.configuration.protocol}</cargo.protocol>
								<cargo.servlet.port>${runtime.appsvr.configuration.servlet.port}</cargo.servlet.port>
								<cargo.servlet.users>${runtime.appsvr.configuration.servlet.users}</cargo.servlet.users>
								<cargo.remote.username>${runtime.appsvr.configuration.manager.username}</cargo.remote.username>
								<cargo.remote.password>${runtime.appsvr.configuration.manager.password}</cargo.remote.password>
								
								<!-- wildfly 8.1 don't support datasource, wildfly 8.0 can not find driver class -->
								<!-- 
								<cargo.datasource.datasource.datasource1>${runtime.appsvr.configuration.datasource.datasource.oracle}</cargo.datasource.datasource.datasource1>
								 -->

								<cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
								<cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
								<cargo.tomcat.connector.keystoreFile>${runtime.key.store}</cargo.tomcat.connector.keystoreFile>
								<cargo.tomcat.connector.keystorePass>${runtime.key.store.password}</cargo.tomcat.connector.keystorePass>
								<cargo.tomcat.connector.keyAlias>${runtime.key.alias}</cargo.tomcat.connector.keyAlias>
								<cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
							</properties>
						</configuration>
						<deployer />
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- 
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
					</execution>
					<execution>
						<id>update-project-license</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
					</execution>
					<execution>
						<id>first</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
					</execution>
				</executions>
			</plugin>
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<goals>install</goals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<attachClasses>true</attachClasses>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.2</version>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<reportSets>
					<reportSet>
						<id>integration-tests</id>
						<reports>
							<report>failsafe-report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.10</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.12.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
		</plugins>
	</reporting>


	<!-- More Project Information -->
	<name>sudoor-server-parent</name>
	<url>http://www.gplatform.net</url>
	<inceptionYear>2013</inceptionYear>
	<licenses>
		<license>
			<name>GNU General Public License, version 2</name>
			<url>http://www.gnu.org/licenses/gpl-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>Shark Xu</name>
		<url>http://www.gplatform.net</url>
	</organization>
	<developers>
		<developer>
			<id>xfcjscn</id>
			<name>Shark</name>
			<email>xfcjscn@gmail.com</email>
		</developer>
	</developers>


	<!-- Environment Settings -->
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/xfcjscn/sudoor-server-parent/issues</url>
	</issueManagement>
	<scm>
		<connection>scm:git:https://github.com/xfcjscn/sudoor-server-parent.git</connection>
		<developerConnection>scm:git:https://github.com/xfcjscn/sudoor-server-parent.git</developerConnection>
		<url>https://github.com/xfcjscn/sudoor-server-parent</url>
		<tag>HEAD</tag>
	</scm>

	<repositories>
		<!-- 
		<repository>
			<id>maven-net-cn</id>
			<name>Maven China Mirror</name>
			<url>http://maven.net.cn/content/groups/public/</url>
		</repository>
		 -->
		<repository>
			<id>repository.springframework.maven.release</id>
			<name>Spring Framework Maven Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</repository>
		<repository>
			<id>repository.springframework.maven.milestone</id>
			<name>Spring Framework Maven milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</repository>
		<repository>
			<id>repository.springframework.maven.snapshot</id>
			<name>Spring Framework Maven snapshot Repository</name>
			<url>http://maven.springframework.org/snapshot</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>codehaus</id>
			<name>codehaus Repsitory</name>
			<url>https://nexus.codehaus.org/content/groups/snapshots-group</url>
			<layout>default</layout>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>test.performance</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.lazerycode.jmeter</groupId>
						<artifactId>jmeter-maven-plugin</artifactId>
						<version>1.9.0</version>
						<executions>
							<execution>
								<id>jmeter-tests</id>
								<phase>verify</phase>
								<goals>
									<goal>jmeter</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>test.integration</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app
				will need. -->
			<!-- By default that is to put the resulting archive into the 'webapps'
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>webapps</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>runtime.appsvr.start</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>runtime.appsvr.run</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>runtime.appsvr.wildfly</id>
			<properties>
				<runtime.appsvr.container.containerId>wildfly8x</runtime.appsvr.container.containerId>
				<runtime.appsvr.container.home>d:/dev/wildfly-8.1.0.Final</runtime.appsvr.container.home>
				<!-- 
				<runtime.appsvr.container.zipUrlInstaller.url>http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.zip</runtime.appsvr.container.zipUrlInstaller.url>
				 -->
				 <!-- cargo only support wildfly 8.0.0 -->
				<runtime.appsvr.container.zipUrlInstaller.url>http://download.jboss.org/wildfly/8.0.0.Final/wildfly-8.0.0.Final.zip</runtime.appsvr.container.zipUrlInstaller.url>

				<runtime.appsvr.configuration.home>d:/dev/wildfly-8.1.0.Final/standalone</runtime.appsvr.configuration.home>
			</properties>
		</profile>

		<profile>
			<id>runtime.appsvr.tomcat</id>
			<properties>
				<runtime.appsvr.container.containerId>tomcat7x</runtime.appsvr.container.containerId>
				<runtime.appsvr.container.home>c:/apps/tomcat</runtime.appsvr.container.home>
				<runtime.appsvr.container.zipUrlInstaller.url>http://mirrors.cnnic.cn/apache/tomcat/tomcat-7/v${org.apache.tomcat.version}/bin/apache-tomcat-${org.apache.tomcat.version}.zip</runtime.appsvr.container.zipUrlInstaller.url>
				<runtime.appsvr.configuration.home>c:/apps/tomcat</runtime.appsvr.configuration.home>

				<runtime.appsvr.configuration.servlet.users>tomcat:tomcat:manager-gui,admin-gui</runtime.appsvr.configuration.servlet.users>
			</properties>
		</profile>

		<profile>
			<id>runtime.appsvr.new</id>
			<properties>
				<runtime.appsvr.container.type>installed</runtime.appsvr.container.type>
				<runtime.appsvr.container.home />
				<runtime.appsvr.configuration.type>standalone</runtime.appsvr.configuration.type>
				<runtime.appsvr.configuration.home />
			</properties>
		</profile>

		<profile>
			<id>runtime.appsvr.local</id>
			<properties>
				<runtime.appsvr.container.type>installed</runtime.appsvr.container.type>
				<runtime.appsvr.configuration.type>existing</runtime.appsvr.configuration.type>
			</properties>
		</profile>

		<profile>
			<id>runtime.appsvr.remote</id>
			<properties>
				<runtime.appsvr.container.type>remote</runtime.appsvr.container.type>
				<runtime.appsvr.configuration.type>runtime</runtime.appsvr.configuration.type>
				<runtime.appsvr.configuration.home />
			</properties>
		</profile>

		<profile>
			<id>runtime.appsvr.https</id>
			<properties>
				<runtime.appsvr.configuration.servlet.port>8443</runtime.appsvr.configuration.servlet.port>
				<runtime.appsvr.configuration.protocol>https</runtime.appsvr.configuration.protocol>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>keytool-maven-plugin</artifactId>
						<version>1.3</version>
						<configuration>
							<verbose>true</verbose>
							<skipIfExist>true</skipIfExist>
							<keystore>${runtime.key.store}</keystore>
							<storetype>${runtime.key.store.type}</storetype>
							<storepass>${runtime.key.store.password}</storepass>
							<alias>${runtime.key.alias}</alias>
							<keypass>${runtime.key.password}</keypass>
							<dname>${runtime.key.dname}</dname>
							<validity>${runtime.key.validity}</validity>
							<keyalg>${runtime.key.algorithm}</keyalg>
							<keysize>${runtime.key.size}</keysize>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>generateKeyPair</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>runtime.appsvr.debug</id>
			<properties>
				<runtime.appsvr.configuration.jvmargs>
					${runtime.appsvr.configuration.jvmargs.common}
					${runtime.appsvr.configuration.jvmargs.debug}
				</runtime.appsvr.configuration.jvmargs>
			</properties>
		</profile>



		<profile>
			<id>runtime.db.local</id>
			<properties>
				<runtime.db.driver>org.postgresql.Driver</runtime.db.driver>
				<runtime.db.url>jdbc:postgresql://localhost:5432/postgres</runtime.db.url>
				<runtime.db.jndi>jdbc/GPlatformDataSource</runtime.db.jndi>
				<runtime.db.username>postgres</runtime.db.username>
				<runtime.db.password>Shark1011</runtime.db.password>
			</properties>
		</profile>

	</profiles>

</project>
